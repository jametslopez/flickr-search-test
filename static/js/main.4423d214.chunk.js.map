{"version":3,"sources":["context/SearchContext.js","components/HeadSearch.js","common/Loading.js","services/flickr.js","components/SectionItem.js","components/SectionList.js","App.js","reportWebVitals.js","index.js"],"names":["SearchContext","React","createContext","keywordReducer","state","action","type","value","SearchContextProvider","children","useReducer","keyword","dispatch","Provider","HeadSearch","useContext","className","placeholder","onChange","event","target","Loading","props","show","icon","faCircleNotch","color","flickrData","tags","a","url","encodeURI","fetch","response","ok","message","status","Error","json","photos","photo","map","item","title","author","ownername","split","imageLarge","url_l","imageThumbnail","url_q","dateTaken","datetaken","SectionItem","rel","href","class","src","alt","tag","index","SectionList","useState","data","loading","images","setImages","useEffect","then","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4423d214.chunk.js","sourcesContent":["import React, { useReducer } from \"react\";\n// const { createContext } = require('react');\n// export const SearchContext = createContext();\n// OR\nexport const SearchContext = React.createContext();\n\nexport const keywordReducer = (state, action) => {\n  switch (action.type) {\n    case \"search\":\n      return { value: action.value };\n\n    default:\n      return { value: state.value };\n  }\n};\n\nexport default function SearchContextProvider({ children }) {\n  const [keyword, dispatch] = useReducer(keywordReducer, \"\");\n\n  return (\n    <SearchContext.Provider value={{ keyword, dispatch }}>\n      {children}\n    </SearchContext.Provider>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { SearchContext } from \"../context/SearchContext\";\n\nexport const HeadSearch = () => {\n  const { keyword, dispatch } = useContext(SearchContext);\n\n  const onChangeSearch = (event) => {\n    dispatch({\n      type: \"search\",\n      value: event.target.value,\n    });\n  };\n\n  return (\n    <header>\n      <p className=\"text-center text-red-500 font-bold my-5\">\n        Flickr Search Test\n      </p>\n      <div className=\"flex\">\n        <input\n          type=\"text\"\n          className=\"px-3 py-2 w-full rounded-lg border border-gray-300 text-sm text-gray-400 placeholder-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-200\"\n          placeholder=\"Please enter a keyword to search\"\n          value={keyword.value}\n          onChange={onChangeSearch}\n        />\n        <button className=\"ml-2 p-2 pl-5 pr-5 bg-red-500 text-gray-100 text-sm rounded-lg\">\n          Search\n        </button>\n      </div>\n    </header>\n  );\n};\n","import React from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleNotch } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const Loading = (props) => {\n  if (props.show) {\n    return (\n      <div className=\"text-red-500 text-sm flex items-center\">\n        <FontAwesomeIcon\n          icon={faCircleNotch}\n          className=\"fa-spin fa-2x\"\n          color=\"red\"\n        />{\" \"}\n        <span className=\"ml-2\">loading</span>\n      </div>\n    );\n  } else {\n    return \"\";\n  }\n};\n","export const flickrData = async (tags) => {\n  if (!tags) {\n    return [];\n  }\n  const apiKey = \"2d215fa217113f4accf29356326b1a4f\";\n  const extras =\n    \"description,+ license,+ date_upload,+ date_taken,+ owner_name,+ icon_server,+ original_format,+ last_update,+ geo,+ tags,+ machine_tags,+ o_dims,+ views,+ media,+ path_alias,+ url_sq,+ url_t,+ url_s,+ url_q,+ url_m,+ url_n,+ url_z,+ url_c,+ url_l,+ url_o\";\n\n  const url = `https://api.flickr.com/services/rest?method=flickr.photos.search&api_key=${apiKey}&tags=${encodeURI(\n    tags\n  )}&page=1&per_page=15&format=json&nojsoncallback=1&extras=${extras}`;\n\n  const response = await fetch(url);\n\n  if (!response.ok) {\n    const message = `An error has occured: ${response.status}`;\n    throw new Error(message);\n  }\n\n  const { photos } = await response.json();\n  return photos.photo.map((item) => {\n    return {\n      title: item.title,\n      author: item.ownername,\n      tags: item.tags.split(\" \"),\n      imageLarge: item.url_l,\n      imageThumbnail: item.url_q,\n      dateTaken: item.datetaken,\n    };\n  });\n};\n","import React from \"react\";\n\nexport const SectionItem = ({\n  title,\n  author,\n  tags,\n  imageLarge,\n  imageThumbnail,\n  dateTaken,\n}) => {\n  return (\n    <div className=\"rounded overflow-hidden shadow-lg\">\n      <a target=\"_blank\" rel=\"noreferrer \" href={imageLarge}>\n        <img class=\"w-full\" src={imageThumbnail} alt=\"\" />\n      </a>\n      <div className=\"px-6 py-4\">\n        <div className=\"font-bold text-xl mb-2\">{title}</div>\n        <p class=\"text-gray-700 text-sm\">- By {author}</p>\n        <p class=\"text-gray-700 text-sm\">- {dateTaken}</p>\n      </div>\n      <div className=\"px-6 pt-4 pb-2\">\n        {tags.map((tag, index) => {\n          return (\n            <span\n              key={index}\n              className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-xs font-semibold text-gray-700 mr-2 mb-2\"\n            >\n              {tag}\n            </span>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Loading } from \"../common/Loading\";\nimport { SearchContext } from \"../context/SearchContext\";\nimport { flickrData } from \"../services/flickr\";\nimport { SectionItem } from \"./SectionItem\";\n\nimport \"./SectionList.css\";\n\nexport const SectionList = () => {\n  const { keyword } = useContext(SearchContext);\n\n  const [images, setImages] = useState({\n    data: [],\n    loading: 0,\n  });\n\n  useEffect(() => {\n    setImages({\n      data: [],\n      loading: 1,\n    });\n\n    flickrData(keyword.value).then((images) => {\n      setImages({\n        data: images,\n        loading:0,\n      });\n    });\n  }, [keyword.value]);\n\n  return (\n    <div className=\"section-list mt-6\">\n      <Loading show={images.loading} />\n      <div class=\"grid md:grid-cols-3 lg:grid-cols-4 gap-4 bg-white\">\n        {images.data.map((item, index) => {\n          return <SectionItem key={index} {...item} />;\n        })}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { HeadSearch } from \"./components/HeadSearch\";\nimport { SectionList } from \"./components/SectionList\";\nimport SearchContextProvider from \"./context/SearchContext\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"sm:container sm:mx-auto mx-4\">\n      <SearchContextProvider>\n        <HeadSearch />\n        <SectionList />\n      </SearchContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}